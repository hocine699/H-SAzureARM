{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azureFirewalls_Azfw_name": {
            "defaultValue": "Azfw",
            "type": "String"
        },
        "publicIPAddresses_ip_pub_name": {
            "defaultValue": "ip-pub",
            "type": "String"
        },
        "virtualNetworks_vnet_hub_name": {
            "defaultValue": "vnet-hub",
            "type": "String"
        },
        "routeTables_udrversspoke1_name": {
            "defaultValue": "udrversspoke1",
            "type": "String"
        },
        "routeTables_udrversspoke2_name": {
            "defaultValue": "udrversspoke2",
            "type": "String"
        },
        "publicIPAddresses_ippubvm1_name": {
            "defaultValue": "ippubvm1",
            "type": "String"
        },
        "publicIPAddresses_ippubvm2_name": {
            "defaultValue": "ippubvm2",
            "type": "String"
        },
        "virtualNetworks_vnet_spoke_1_name": {
            "defaultValue": "vnet-spoke-1",
            "type": "String"
        },
        "virtualNetworks_vnet_spoke_2_name": {
            "defaultValue": "vnet-spoke-2",
            "type": "String"
        },
        "networkSecurityGroups_NSG_VM_1_name": {
            "defaultValue": "NSG-VM-1",
            "type": "String"
        },
        "networkSecurityGroups_NSG_VM_2_name": {
            "defaultValue": "NSG-VM-2",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-05-01",
            "name": "[parameters('networkSecurityGroups_NSG_VM_1_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "[concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '80')]",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_NSG_VM_1_name'), concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '80'))]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '3389')]",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_NSG_VM_1_name'), concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '3389'))]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-05-01",
            "name": "[parameters('networkSecurityGroups_NSG_VM_2_name')]",
            "location": "francecentral",
            "properties": {
                "securityRules": [
                    {
                        "name": "[concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '80')]",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_NSG_VM_2_name'), concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '80'))]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '3389')]",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_NSG_VM_2_name'), concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '3389'))]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-05-01",
            "name": "[parameters('publicIPAddresses_ip_pub_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "108.142.133.18",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-05-01",
            "name": "[parameters('publicIPAddresses_ippubvm1_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.174.1.14",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "vm1-aa0acf",
                    "fqdn": "vm1-aa0acf.eastus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-05-01",
            "name": "[parameters('publicIPAddresses_ippubvm2_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.111.17.252",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "vm2-a685c7",
                    "fqdn": "vm2-a685c7.francecentral.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2023-05-01",
            "name": "[parameters('routeTables_udrversspoke1_name')]",
            "location": "francecentral",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "versspoke1",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_udrversspoke1_name'), 'versspoke1')]",
                        "properties": {
                            "addressPrefix": "192.168.0.0/24",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.2.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2023-05-01",
            "name": "[parameters('routeTables_udrversspoke2_name')]",
            "location": "eastus",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "verspoke2",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_udrversspoke2_name'), 'verspoke2')]",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.2.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '/', parameters('networkSecurityGroups_NSG_VM_1_name'), '3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_VM_1_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_VM_1_name'), '/', parameters('networkSecurityGroups_NSG_VM_1_name'), '80')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_VM_1_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '/', parameters('networkSecurityGroups_NSG_VM_2_name'), '3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_VM_2_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_VM_2_name'), '/', parameters('networkSecurityGroups_NSG_VM_2_name'), '80')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_VM_2_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('routeTables_udrversspoke2_name'), '/verspoke2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke2_name'))]"
            ],
            "properties": {
                "addressPrefix": "172.16.0.0/24",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.2.4",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('routeTables_udrversspoke1_name'), '/versspoke1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke1_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.0.0/24",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.2.4",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.2.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/Prof')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2023-05-01",
            "name": "[parameters('azureFirewalls_Azfw_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ip_pub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "ip-pub",
                        "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_Azfw_name')), '/azureFirewallIpConfigurations/ip-pub')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ip_pub_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "ICMP",
                        "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_Azfw_name')), '/networkRuleCollections/ICMP')]",
                        "properties": {
                            "priority": 101,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "icmpspoke1versspoke2",
                                    "protocols": [
                                        "ICMP"
                                    ],
                                    "sourceAddresses": [
                                        "192.168.0.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "172.16.0.0/24"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "7"
                                    ]
                                },
                                {
                                    "name": "icmpspoke2versspoke1",
                                    "protocols": [
                                        "ICMP"
                                    ],
                                    "sourceAddresses": [
                                        "172.16.0.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "192.168.0.0/24"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "7"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [],
                "natRuleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-05-01",
            "name": "[parameters('virtualNetworks_vnet_hub_name')]",
            "location": "westeurope",
            "dependsOn": [
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "Prof",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'Prof')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.2.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],

                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-05-01",
            "name": "[parameters('virtualNetworks_vnet_spoke_1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke2_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/24"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "prod",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_1_name'), 'prod')]",
                        "properties": {
                            "addressPrefixes": [
                                "192.168.0.0/24"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke2_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],

                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-05-01",
            "name": "[parameters('virtualNetworks_vnet_spoke_2_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke1_name'))]"

            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "prod",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_2_name'), 'prod')]",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.0.0/24"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke1_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],

                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_1_name'), '/prod')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_1_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke2_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "192.168.0.0/24"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke2_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_2_name'), '/prod')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_2_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke1_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "172.16.0.0/24"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_udrversspoke1_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/hubversspoke1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_1_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_1_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/24"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/hubversspoke2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_2_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_2_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_1_name'), '/spoke1vershub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_2_name'), '/spoke2vershub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        }
    ]
}